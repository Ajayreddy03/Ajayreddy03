'''from typing import List
class Solution:
    def rotate(self, matrix: List[List[int]]) -> None:
        row=len(matrix)
        col=len(matrix[0])
        
        for i in range(row):
            for j in range(i,col):
                matrix[i][j],matrix[j][i]=matrix[j][i],matrix[i][j]
        for i in range(row):
            matrix[i].reverse()
        return matrix[i][j]
if __name__=="__main__":
    matrix=[
        [1, 2, 3],
        [4, 5, 6],
        [7, 8, 9]
    ]
    solution=Solution()
    print("original matrix:")
    for row in matrix:
        print(row)
    rotated_matrix=solution.rotate(matrix)
    for row in rotated_matrix:
        print(row)'''

def rotate(matrix):
    n = len(matrix)

    # Transpose the matrix
    for i in range(n):
        for j in range(i, n):
            matrix[i][j], matrix[j][i] = matrix[j][i], matrix[i][j]

    # Reverse each row
    for row in matrix:
        row.reverse()

# Example usage:
if __name__ == "__main__":
    matrix1 = [[1,2,3],[4,5,6],[7,8,9]]
    rotate(matrix1)
    print("Rotated Matrix 1:", matrix1)

    matrix2 = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]
    rotate(matrix2)
    print("Rotated Matrix 2:", matrix2)



